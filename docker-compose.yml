version: '3.8'

services:
  train-ticket-auto-query:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: train-ticket-auto-query
    ports:
      - "30001:5001"
    volumes:
      # 可选：挂载日志目录到宿主机
      - ./logs:/app/logs
    environment:
      # 这里可以覆盖默认环境变量
       TS_BASE_URL: "http://101.47.134.73:32677"
      # TS_USERNAME: "你的用户名"
      # TS_PASSWORD: "你的密码"
      # TS_LOG_LEVEL: "DEBUG"  # 设置为DEBUG查看更详细日志
       TZ: "Asia/Shanghai"  # 设置时区为东八区（上海）
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
      
  train-ticket-timed-task:
    build:
      context: .
      dockerfile: Dockerfile.timed-task
    container_name: train-ticket-timed-task
    volumes:
      # 可选：挂载日志目录到宿主机
      - ./logs:/app/logs
    environment:
      # 这里可以覆盖默认环境变量
      TS_BASE_URL: "http://101.47.134.73:32677"
      # TS_USERNAME: "你的用户名"
      # TS_PASSWORD: "你的密码"
      TS_TIMED_TASK_INTERVAL: "60"  # 定时任务执行间隔（秒）
      TS_TOKEN_REFRESH_INTERVAL: "1800"  # token刷新间隔，默认30分钟
      TS_LOG_LEVEL: "INFO"  # 日志级别
      TZ: "Asia/Shanghai"  # 设置时区为东八区（上海）
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import os, sys, time; sys.exit(0 if os.path.exists('/tmp/health_check') and time.time() - os.path.getmtime('/tmp/health_check') < 120 else 1)"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 60s 